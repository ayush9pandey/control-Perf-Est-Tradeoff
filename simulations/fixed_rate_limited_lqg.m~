close all
T=10^5 - 1; %total time instants (T-1)
Q=1;R=1;F=1;V=1;W=1;
alpha=2; %system parameter
S(T+1)=F; %assumption from paper 
P(1)=5; %assuming Po, here denoted as P(1)

w=sqrt(W)*randn((T+1),1); 
v=sqrt(V)*randn((T+1),1);
x(1)=sqrt(P(1))*randn(1,1);
s_bar_tilde=zeros((T+1),1);

Ra = 5;
% Deltas = linspace(0,10,100);

for t=(T+1):-1:2
    S(t-1)=((alpha^2)*R*S(t))/(S(t)+R) + Q; % controller ARE iterations
end

for t=1:1:T
    P(t+1)=(alpha^2)*P(t)*(1-(P(t)/(P(t)+V)))+W;  % KF ARE
end

% %%%%%%%%%simulating the system %%%%%%%%


for t=(T+1):-1:2
    %controller gain
    L(t-1)=(alpha*S(t))/(S(t)+R);
end
for t=1:1:(T+1)
    %kalman gain
    K(t)=(P(t)/sqrt(P(t)+V));
end
%simulate the flow

% for i_delta = 1 : length(Deltas)
%     delta = Deltas(i_delta);
    delta = 1; flagO = 0;
    
    y(1) = x(1) + v(1);
    x_hat_t(1) = 0;
    u(1) = 0;
    x(2) = alpha*x(1)+u(1)+w(1);
    sumac=0;
      for t=2:1:(T+1)
        y(t) = x(t) + v(t);
        s(t) = y(t) - alpha * x_hat_t(t-1) - u(t-1);
        s_bar(t) = sqrt(1/(P(t)+V)) * s(t);
%         s_barQ(t) = truncateQ(s_bar(t), limit1, limit2, delta);
        [s_barQ(t), flagO] = truncateQ(s_bar(t), delta);
        if flagO == 1
            % stretch delta 
            delta = 2 * delta;
        else
            % squeeze delta
            delta = delta / 1.5;
        end
                       
        y_tilde(t) = s_barQ(t) - s_bar_tilde(t);
        x_hat(t) = alpha * x_hat_t(t-1) + u(t-1);
        x_hat_t(t) = x_hat(t) + K(t)*y_tilde(t);
%         x_hat_tQ(t) = quant(x_hat_t(t), delta);
        if t<(T+1)
            u(t) = -L(t)*x_hat_t(t);
            x(t+1) = alpha*x(t)+u(t)+w(t);
            sumac = sumac + (Q*(x(t)^2)) + (R*(u(t))^2);
        end         
      end
    J_opt_sim(i_delta) = (  F*(x(T+1)^2) + sumac + (Q*(x(1)^2)) + (R*(u(1))^2) ) / (T+1);

end

[minJ,ind] = min(J_opt_sim);
minJ
Deltas(ind)